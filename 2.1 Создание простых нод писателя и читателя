задаём зависимости roscpp и называем talkers
Производим изменения в CMakeLists.txt 
Далее разбираем код с этого сайта 

http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber%28c%2B%2B%29

#include "ros/ros.h"
#include "geometry_msgs/Twist.h"

int main(int argc, char **argv)
{
ros::init(argc, argv, "publisher");
ros::NodeHandle n;
ros::Publisher pub = n.advertise<geometry_msgs::Twist>("/turtle1/cmd_vel", 1000);

ros::Rate loop_rate(1);
for (int t = 0; t < 20; t++){
geometry_msgs::Twist pos;
pose.linear.x=1.5;
pos.angular.z=std::abs(2*sin(0.5*t));

ROS_INFO("Move to position:\n"
"1) pos linear: x= %f y= %f z=%f\n'
"2) pos.angular: x= %f y= %f z=%f\n',
pos.linear.x, pos.linear.y, pos.linear.z,
pos.angular.x, pos.angular.y, pos.angular.z);
pub.publish(pos);
loop_rate.sleep();
}
ros::spinOnce();
return 0;
}

Данный код отвечает за отправку команды к движению черепашки

devel/setup.bash 
rosrun talkers publisher   Без publisher Node не будет знать пусти и придётся прописывать
весь путь

ros::spinOnce()    Вызывает все ожидающие запуска callback-и (например, на чтение из топика)
Если сообщения публикуются в топик в бесконечном цикле, перед которым установлен
ros::Rate r(10), а в конце которого находится r.sleep(),
можно ли назвать полученную систему системой реального времени?

 Нет, так как на одну итерацию цикла может уйти больше, чем 0,1с


В пункте 2.1 также даны задачи на выполнение Нодов, однако на данный момент я не смог их выполнить, так как они требуют знания С++,
которым я на данный момент не обладаю. В рамках знакомства с РОС я уверен, что оперделённо пройду курс по С++.
